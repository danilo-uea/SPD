{"ast":null,"code":"var _jsxFileName = \"/home/danilo/Documentos/GitHub/SPD/front-end/src/pages/main/index.js\";\nimport React, { Component } from \"react\";\nimport api from \"../../services/api\";\nimport { Button, Card } from 'react-bootstrap';\nimport './styles.css';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      perguntas: [],\n      perguntasInfo: {},\n      page: 1\n    };\n\n    this.loadProducts = async (page = 1) => {\n      const response = await api.get(`/perguntas?page=${page}`);\n      const {\n        docs,\n        ...perguntasInfo\n      } = response.data;\n      this.setState({\n        perguntas: docs,\n        perguntasInfo,\n        page\n      });\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state;\n      if (page === 1) return;\n      const pageNumber = page - 1;\n      this.loadProducts(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page,\n        perguntasInfo\n      } = this.state;\n      if (page === perguntasInfo.pages) return;\n      const pageNumber = page + 1;\n      this.loadProducts(pageNumber);\n    };\n  }\n\n  //Execultar uma ação logo que o componente é exibido em tela\n  componentDidMount() {\n    this.loadProducts();\n  }\n\n  render() {\n    const {\n      perguntas,\n      page,\n      perguntasInfo\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lista-perguntas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, perguntas.map(pergunta => /*#__PURE__*/React.createElement(Card, {\n      key: pergunta._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, pergunta.titulo), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, pergunta.texto), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"login-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, pergunta.publicacao), /*#__PURE__*/React.createElement(Button, {\n      href: `pergunta/${pergunta._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Acessar\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"botoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: page === 1,\n      onClick: this.prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Anterior\"), /*#__PURE__*/React.createElement(Button, {\n      disabled: page === perguntasInfo.pages,\n      onClick: this.nextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Proxima\")));\n  }\n\n}","map":{"version":3,"sources":["/home/danilo/Documentos/GitHub/SPD/front-end/src/pages/main/index.js"],"names":["React","Component","api","Button","Card","Main","state","perguntas","perguntasInfo","page","loadProducts","response","get","docs","data","setState","prevPage","pageNumber","nextPage","pages","componentDidMount","render","map","pergunta","_id","titulo","texto","publicacao"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport api from \"../../services/api\";\nimport { Button, Card } from 'react-bootstrap';\nimport './styles.css';\n\nexport default class Main extends Component {\n    state = {\n        perguntas: [],\n        perguntasInfo: {},\n        page: 1\n    }\n\n    //Execultar uma ação logo que o componente é exibido em tela\n    componentDidMount(){ \n        this.loadProducts();\n    }\n\n    loadProducts = async (page = 1) => {\n        const response = await api.get(`/perguntas?page=${page}`);\n\n        const { docs, ...perguntasInfo } = response.data;\n        this.setState({ perguntas: docs, perguntasInfo, page});\n    };\n\n    prevPage = () => {\n        const {page} = this.state;\n\n        if(page === 1) return;\n\n        const pageNumber = page - 1;\n        this.loadProducts(pageNumber);\n    }\n\n    nextPage = () => {\n        const {page, perguntasInfo} = this.state;\n\n        if(page === perguntasInfo.pages) return;\n\n        const pageNumber = page + 1;\n        this.loadProducts(pageNumber);\n    }\n\n    render(){\n        const { perguntas, page, perguntasInfo } = this.state;\n        \n        return (\n            <div className=\"lista-perguntas\">\n                {perguntas.map(pergunta => (\n                    <Card key={pergunta._id}>\n                        <Card.Header>{pergunta.titulo}</Card.Header>\n                        <Card.Body>\n                            <Card.Title>{pergunta.texto}</Card.Title>\n                            <Card.Text className=\"login-data\">\n                                {pergunta.publicacao}\n                            </Card.Text>\n                            <Button href={`pergunta/${pergunta._id}`}>Acessar</Button>\n                        </Card.Body>\n                    </Card>\n                ))}\n                <div className=\"botoes\">\n                    <Button disabled={page === 1} onClick={this.prevPage}>Anterior</Button>\n                    <Button disabled={page === perguntasInfo.pages} onClick={this.nextPage}>Proxima</Button>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}