{"ast":null,"code":"var _jsxFileName = \"/home/danilo/Documentos/GitHub/SPD/front-end/src/pages/createQuestion/index.js\";\nimport React, { Component } from \"react\";\nimport api from \"../../services/api\";\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nexport default class CreateQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titulo: \"\",\n      categoria: \"\",\n      texto: \"\",\n      token: localStorage.getItem('token-do-usuario')\n    };\n\n    this.handleSingUp = async e => {\n      e.preventDefault();\n      const {\n        titulo,\n        categoria,\n        texto,\n        token\n      } = this.state;\n      const header = {\n        \"authorization\": \"bearer \" + token\n      };\n\n      if (!titulo || !categoria || !texto) {\n        this.setState({\n          error: \"preencha todos os campos\"\n        });\n      } else {\n        try {\n          await api.post(\"/perguntas\", {\n            titulo,\n            categoria,\n            texto,\n            \"usuario\": token\n          }, {\n            headers: header\n          });\n        } catch (err) {\n          console.log(err);\n          this.setState({\n            error: \"erro ao efetuar o registro\"\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    if (this.state.token === \"\") return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }\n    }, \"Por favor, fa\\xE7a o login\");else return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSingUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, this.state.error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"titulo\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Titulo\",\n      onChange: e => this.setState({\n        titulo: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Categoria\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Categoria\",\n      onChange: e => this.setState({\n        categoria: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"texto\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Especifique aqui a sua duvida\",\n      onChange: e => this.setState({\n        texto: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Cadastrar Pergunta\"))));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/danilo/Documentos/GitHub/SPD/front-end/src/pages/createQuestion/index.js"],"names":["React","Component","api","Form","Row","Col","Button","CreateQuestion","state","titulo","categoria","texto","token","localStorage","getItem","handleSingUp","e","preventDefault","header","setState","error","post","headers","err","console","log","render","target","value","span","offset"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport api from \"../../services/api\";\nimport { Form, Row, Col, Button } from 'react-bootstrap';\n\nexport default class CreateQuestion extends Component{\n\n    state = {\n        titulo: \"\",\n        categoria: \"\",\n        texto: \"\",\n        token: localStorage.getItem('token-do-usuario')\n    };\n\n    handleSingUp = async e => {\n        e.preventDefault();\n        const {titulo, categoria, texto, token} = this.state;\n        const header={\"authorization\": \"bearer \" + token}\n        if(!titulo || !categoria || !texto){\n            this.setState({error: \"preencha todos os campos\"});\n        }\n        else{\n            try{\n                await api.post(\"/perguntas\",{titulo, categoria, texto, \"usuario\": token}, {headers: header});\n            }catch(err){\n                console.log(err);\n                this.setState({error: \"erro ao efetuar o registro\"});\n                } \n            }\n        }\n\n    render(){\n        if(this.state.token === \"\")\n            return(<h1>Por favor, faça o login</h1>)\n        else\n        return(\n            <Form onSubmit={this.handleSingUp}>\n                {this.state.error && <p>{this.state.error}</p>}\n\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                    <Form.Label column sm={2}>\n                        titulo\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control \n                            type=\"text\" \n                            placeholder=\"Titulo\" \n                            onChange={e => this.setState({titulo: e.target.value})} \n                        />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                    <Form.Label column sm={2}>\n                        Categoria\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control \n                            type=\"text\" \n                            placeholder=\"Categoria\" \n                            onChange={e => this.setState({categoria: e.target.value})}\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                    <Form.Label column sm={2}>\n                        texto\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control \n                            type=\"text\" \n                            placeholder=\"Especifique aqui a sua duvida\" \n                            onChange={e => this.setState({texto: e.target.value})}\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                    <Col sm={{ span: 10, offset: 2 }}>\n                    <Button type=\"submit\">Cadastrar Pergunta</Button>\n                    </Col>\n                </Form.Group>\n            </Form>\n        )\n    }\n};\n"]},"metadata":{},"sourceType":"module"}